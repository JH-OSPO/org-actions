name: "ScanCode License Scanner"
description: "Simple ScanCode toolkit runner that scans for licenses and shows results"
author: "Your Name"
inputs:
  scan-path:
    description: "Path inside the target repo to scan"
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12.3"

    - name: Install ScanCode Toolkit
      shell: bash
      run: |
        echo "Installing ScanCode Toolkit..."
        python -m pip install --upgrade pip
        pip install scancode-toolkit "boolean.py>=4.0" "click==7.1.2"

    - name: Run ScanCode License Scan
      shell: bash
      run: |
        echo "Running ScanCode license scan on: ${{ inputs.scan-path }}"
        mkdir -p scancode-results
        scancode --license --only-findings --json-pp scancode-results/results.json "${{ inputs.scan-path }}" --ignore "*/venv/*"

    - name: Check for Licenses
      id: license-check
      shell: python
      run: |
        import json
        
        try:
          with open('scancode-results/results.json', 'r') as f:
            data = json.load(f)
            
          # Look for 'license_detections' at the root level.
          licenses = data.get('license_detections', [])
          
          if licenses:
            print("Found licenses.")
            print("Detected licenses:", [lic['license_expression'] for lic in licenses])
            print("has_licenses=true")
          else:
            print("No licenses found.")
            print("has_licenses=false")

        except FileNotFoundError:
          print("Error: The results file was not found.")
          print("has_licenses=false")

        # Set output for the step
        # This will be used in a later step
        print(f"::set-output name=has_licenses::{'true' if licenses else 'false'}")